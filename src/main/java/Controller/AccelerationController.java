package Controller;

import DAO.AccelerationDAO;
import Model.Acceleration;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.List;

/**
 * @author chrisneven
 * The AccelerationController class is responsible for handeling requests by using the DAO's for saving and the model for defining objects that are received.
 * from the frontend. The Controller is the bridge between mobile application and the DAO - database.
 */
@Controller
@RequestMapping("/accelerations")
public class AccelerationController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private AccelerationDAO accelerationDAO;

    /**
     * Method for capturing acceleration objects and giving it to the accelerationDAO
     * @param acceleration Object of the Acceleration class
     * @return A string in JSON format so the mobile application can handle it properly
     */
    @PostMapping(path = "/add") // POST request enabled
    public @ResponseBody
    String addNewAcceleration (@RequestBody Acceleration acceleration) {
        try {
            accelerationDAO.save(acceleration);
            return "{saved:true}";
        }
        catch (Exception e){ //When an error occurs, the error will be returned as a message in the json response
            return "{saved:false, error:" + e + "}";
        }
    }

    /**
     * Method for handling the delete request which deletes all the accelerations in the database
     * @return String containing message
     */
    @RequestMapping(path = "delete/all") // GET request enabled
    public @ResponseBody
    String deleteAllAccelerations (){
        long count = accelerationDAO.count();
        accelerationDAO.deleteAll();
        return "All " + count + "are deleted succesfully";
    }

    /**
     * Method for handling the last request which gets the last acceleration from the database
     * @return Acceleration object which is the last in the db
     */
    @RequestMapping(path = "last") // GET request enabled
    public @ResponseBody
    Acceleration getLastAcceleration (){
       return accelerationDAO.findFirstByOrderByIdDesc();
    }
}
